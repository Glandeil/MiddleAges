@model MiddleAges.ViewModels.MainInfoViewModel
@using MiddleAges.ViewComponents

@{
    ViewData["Title"] = "middle ages";
}

<div class="d-flex">
    <div class="lhst_left-side-bar lhst_vertical-alignment-top">
        <div class="lhst_left_side_bar_land_content row justify-content-md-center">
            <div class="col lhst_map_region_icon_left_bar_col">
                <img id="selected_land_coat_of_arms" src="../img/map-regions-icons-middle-ages/@(Model.Player.CurrentLand).png" class="lhst_map_region_icon_left_bar" alt="map region coat of arms" loading="lazy" />
            </div>
            <div class="col lhst_current_land_text_content lhst_map_region_icon_left_bar_col">
                <p class="lhst_current_land_name mb-0 lhst_leftSideBar_country_name">@Model.Player.Land.Country.Name</p>
                <p class="lhst_current_land_name lhst_leftSideBar_land_name">@Model.Player.CurrentLand</p>
            </div>
            
        </div>
    </div>
    <div class="lhst_vertical-alignment-top lhst_main-section_mainmenu lhst_main_section_padding">
        <div class="float-left mr-3">
            @await Component.InvokeAsync(typeof(BuildingsViewComponent))
            @await Component.InvokeAsync(typeof(UnitsViewComponent))
        </div>
        <div class="float-left mr-3">
            <p class="lhst_possessions_titles">Production</p>
            <div class="lhst_production_card">
                <p class="w-100 flex-wrap mb-2 font-weight-normal">Every hour money will flow into your treasury. The amount of money depends on the number of working peasants and land taxes.</p>
                @{
                    string productionStatusString;
                    string productionBtnText;

                    if (Model.Player.EndDateTimeProduction < DateTime.UtcNow)
                    {
                        productionBtnText = "Start production";
                        productionStatusString = "Production has not yet started";
                    }
                    else
                    {
                        productionBtnText = "Restart production";
                        productionStatusString = "Production will end at: " + Model.Player.EndDateTimeProduction;
                    }

                    <input id="productionBtn" type="submit" class="lhst_btn_moveToRegion mb-2" value="@productionBtnText" onclick="restartProduction()" />
                    <p id="productionStatusStr" class="w-100 flex-wrap mb-2 font-weight-normal">@productionStatusString</p>
                }

                <div class="lhst_line ml-0 mr-0 mb-0"></div>
                <p class="w-100 flex-wrap mb-1 font-weight-normal lhst_tooltip_production lhst_cursor_help">
                    Today's earnings:
                    <span class="lhst_tooltiptext_production">
                        Today's earnings:
                    </span>
                    <img class="ml-1 lhst_independent_land_description_money_icon" src="~/img/interface-icons/coins.png" alt="" />
                    <span class="lhst_independent_land_description_money_amount lhst_color-money"> @Math.Round(Model.Player.MoneyProduced, 2).ToString().Replace(',', '.')</span>
                </p>                    
         
               
                <p class="w-100 flex-wrap mb-0 font-weight-normal lhst_tooltip_production lhst_cursor_help">
                    Today's expenses:
                    <span class="lhst_tooltiptext_production">
                        Today's expenses:
                    </span>
                    <img class="ml-1 lhst_independent_land_description_money_icon" src="~/img/interface-icons/coins.png" alt="" />
                    <span class="lhst_independent_land_description_money_amount lhst_clr-brown"> -@Math.Round(Model.Player.MoneySpent, 2).ToString().Replace(',', '.')</span>
                </p>

                <p class="w-100 flex-wrap mb-0 font-weight-normal lhst_tooltip_production lhst_cursor_help">
                    Today's balance:
                    <span class="lhst_tooltiptext_production">
                        Today's balance:
                    </span>
                    <img class="ml-1 lhst_independent_land_description_money_icon" src="~/img/interface-icons/coins.png" alt="" /><span class="lhst_independent_land_description_money_amount @(Model.Player.MoneyProduced - Model.Player.MoneySpent < 0 ? "lhst_clr-brown" : "lhst_clr-money")"> @Math.Round(Model.Player.MoneyProduced - Model.Player.MoneySpent, 2).ToString().Replace(',', '.')</span>
                </p>
                
                <p class="w-100 flex-wrap mb-0 font-weight-normal lhst_tooltip_production lhst_cursor_help">
                    Remaining land limit:
                    <span class="lhst_tooltiptext_production">
                        Remaining land limit:
                    </span>
                    <img class="ml-1 lhst_independent_land_description_money_icon" src="~/img/interface-icons/coins.png" alt="" /><span class="lhst_independent_land_description_money_amount"> @Math.Round(Model.ResidenceLand.ProductionLimit, 2).ToString().Replace(',', '.')</span>
                </p>
                
                <p class="w-100 flex-wrap mb-0 font-weight-normal lhst_tooltip_production lhst_cursor_help">
                    Residence prod land:
                    <span class="lhst_tooltiptext_production">
                        Residence prod land:
                    </span>
                    <span class="ml-1 lhst_clr-money">@Model.ResidenceLand.LandId</span>
                </p>
                
                <p class="w-100 flex-wrap mb-0 font-weight-normal lhst_tooltip_production lhst_cursor_help">
                    Working residents:
                    <span class="lhst_tooltiptext_production">
                        Working residents:
                    </span>
                    <span class="ml-1 lhst_clr-money">@Model.Units[0].Count</span>
                </p>
                                
                <p class="w-100 flex-wrap mb-0 font-weight-normal lhst_tooltip_production lhst_cursor_help">
                    Projected daily earnings:
                    <span class="lhst_tooltiptext_production">
                        Projected daily earnings:
                    </span>
                    <img class="ml-1 lhst_independent_land_description_money_icon lhst_clr-money" src="~/img/interface-icons/coins.png" alt="" /><span class="lhst_independent_land_description_money_amount"> @(Math.Round(Model.Units[0].Count * 0.01 * 24.00 * (1 + Convert.ToDouble(Model.PlayerAttribute.Management) * 0.02) * (1 - Convert.ToDouble(Model.ResidenceLand.LandTax) / 100.00), 2).ToString().Replace(',', '.'))/day</span>
                </p>
                                               
                <p class="w-100 flex-wrap mb-0 font-weight-normal lhst_tooltip_production lhst_cursor_help">
                    Army maintenance:
                    <span class="lhst_tooltiptext_production">
                        Army maintenance:
                    </span>
                    <img class="ml-1 lhst_independent_land_description_money_icon" src="~/img/interface-icons/coins.png" alt="" /><span class="lhst_clr-brown"> -@(Math.Round(Model.Units[1].Count * 0.02 * 24.00, 2).ToString().Replace(',', '.'))/day</span>
                </p>

                @{
                    double projectedDailyBalance = Math.Round(Model.Units[0].Count * 0.01 * 24.00 * (1 + Convert.ToDouble(Model.PlayerAttribute.Management) * 0.02) * (1 - Convert.ToDouble(Model.ResidenceLand.LandTax) / 100.00) - Model.Units[1].Count * 0.02 * 24.00, 2);
                }

                <p class="w-100 flex-wrap mb-0 font-weight-normal lhst_tooltip_production lhst_cursor_help">
                    Projected daily balance:         
                    <span class="lhst_tooltiptext_production">
                        Projected daily balance:
                    </span>
                    <img class="ml-1 lhst_independent_land_description_money_icon @(projectedDailyBalance < 0 ? "lhst_clr-brown" : "lhst_clr-money")" src="~/img/interface-icons/coins.png" alt="" /><span class="lhst_independent_land_description_money_amount"> @(projectedDailyBalance.ToString().Replace(',', '.'))/day</span>
                </p>

                <p class="w-100 flex-wrap mb-0 font-weight-normal lhst_tooltip_production lhst_cursor_help">
                    Taxes: 
                    <span class="lhst_tooltiptext_production">
                        Taxes:
                    </span>
                    <span class="lhst_clr-brown ml-1">@(Model.ResidenceLand.LandTax)%</span>
                </p>
                
            </div>
        </div>

        <div class="float-left mb-2 mr-3">
            <div class="d-flex">
                <p class="lhst_possessions_titles">Attributes</p>
                <p class="lhst_possessions_titles">(<span id="availAttrPointsMainSection">@CommonLogic.GetAvailAttrPoints(Model.Player.Lvl, Model.PlayerAttribute)</span> <img class="lhst_attr_coin_img" src="~/img/attributes/attrPoint.png" alt="" />)</p>
            </div>
            <div class="lhst_attr_card d-block">
                @*Attr 1*@
                <div class="row">
                    <img class="lhst_attr_img_big lhst_brightness" src="~/img/attributes/management.png" alt="" />
                    <div class="p-1 lhst_attr_name">
                        <p class="font-weight-bolder mb-0 mt-0">Management</p>
                        <p class="mb-0 mt-0 font-weight-light lhst_font_size-smaller">increases the base income of peasants by 2% for each level</p>
                    </div>
                    <p id="Management" class="p-0 lhst_attr_value font-weight-bolder mb-0 mt-2 mr-2">@Model.PlayerAttribute.Management</p>
                    <input class="attrBtn p-0 lhst_btn_building_lvlup mt-1 mb-0" type="submit" data-attributename="Management" value="+" />
                </div>
                @*Attr 2*@
                <div class="row">
                    <img class="lhst_attr_img_big lhst_brightness" src="~/img/attributes/warfare.png" alt="" />
                    <div class="p-1 lhst_attr_name">
                        <p class="font-weight-bolder mb-0 mt-0">Warfare</p>
                        <p class="mb-0 mt-0 font-weight-light lhst_font_size-smaller">increases army strength by 2% per level</p>
                    </div>
                    <p id="Warfare" class="p-0 lhst_attr_value font-weight-bolder mb-0 mt-2 mr-2">@Model.PlayerAttribute.Warfare</p>
                    <input class="attrBtn p-0 lhst_btn_building_lvlup mt-1 mb-0" type="submit" value="+" data-attributename="Warfare" />
                </div>
                @*Attr 3*@
                <div class="row">
                    <img class="lhst_attr_img_big lhst_brightness" src="~/img/attributes/leadership.png" alt="" />
                    <div class="p-1 lhst_attr_name">
                        <p class="font-weight-bolder mb-0 mt-0">Leadership</p>
                        <p class="mb-0 mt-0 font-weight-light lhst_font_size-smaller">increases the chance of receiving an additional recruit by 2% per level</p>
                    </div>
                    <p id="Leadership" class="p-0 lhst_attr_value font-weight-bolder mb-0 mt-2 mr-2">@Model.PlayerAttribute.Leadership</p>
                    <input class="attrBtn p-0 lhst_btn_building_lvlup mt-1 mb-0" type="submit" value="+" data-attributename="Leadership" />
                </div>
            </div>
        </div>

        @if (Model.PlayerLocalEvents.Count > 0)
        {
            <div class="d-block float-left mb-2" style="width: 250px">
                <div class="row">
                    <p class="lhst_possessions_titles" style="width: 250px">Local Events</p>
                </div>
                <div class="row lhst_scale lhst_blur-image">
                    @for (int i = 0; i < Model.PlayerLocalEvents.Count; i++)
                    {
                        <button class="lhst_shadow_text lhst_event_btn" style="background-image: url(../img/local-events/@(Model.PlayerLocalEvents[i].EventId)_preview.jpg);" data-localeventid=@Model.PlayerLocalEvents[i].LocalEventId></button>
                    }
                </div>
            </div>
        }
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/main.js"></script>
    <script src="~/js/modal_local_events.js"></script>
</div>

@*Local Events Modal*@
<div id="m_local_events_dialog" class="lhst_m_local_events_dialog modal">
    <div class="row mb-1">
        <div class="text-center" style="width: 414px; margin-left: 25px">
            <h2 id="m_local_events_title" class="mb-0 lhst_m_local_events_title"></h2>
        </div>

        <div class="text-right" style="width: 25px;">
            <button class="lhst_btn_dialog_cancel" onclick="hideModalLocalEventDialog()">x</button>
        </div>
    </div>

    <img id="m_local_events_img" class="lhst_m_local_events_title_img" alt="" loading="lazy" />

    <p id="m_local_events_description" class="mt-2 mb-2"></p>

    <button id="m_local_events_option1" class="lhst_event_option_btn lhst_default_button mb-1" style="font-size: 12px; width: 465px" data-option="1"></button>
    <button id="m_local_events_option2" class="lhst_event_option_btn lhst_default_button" style="font-size: 12px; width: 465px"data-option="2"></button>

    <p class="mt-2 mb-0" style="font-weight: 400">Event assigned 08/07/2024 at: 17:51</p>
    <p class="mb-0" style="font-weight: 400">If you don't select anything, the event will change to another one after 6 hours</p>
</div>