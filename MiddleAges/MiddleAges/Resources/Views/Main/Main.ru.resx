<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="OnlinePlayers" xml:space="preserve">
    <value>В сети</value>
  </data>
  <data name="ProdDescr" xml:space="preserve">
    <value>Каждый час деньги будут поступать в казну. Заработок зависит от количество работающих крестьян и процента налогов.</value>
  </data>
  <data name="Production" xml:space="preserve">
    <value>Производство</value>
  </data>
  <data name="StartProd" xml:space="preserve">
    <value>Запуск производства</value>
  </data>
  <data name="ProdNotStarted" xml:space="preserve">
    <value>Производство не работает</value>
  </data>
  <data name="TodayEarnings" xml:space="preserve">
    <value>Сегодняшний заработок:</value>
  </data>
  <data name="TodayEarningsDescr" xml:space="preserve">
    <value>Количество денег, заработанное сегодня:</value>
  </data>
  <data name="RestartProd" xml:space="preserve">
    <value>Перезапустить производство</value>
  </data>
  <data name="EndTimeProd" xml:space="preserve">
    <value>Производство завершится:</value>
  </data>
  <data name="TodayExpenses" xml:space="preserve">
    <value>Сегодняшние расходы:</value>
  </data>
  <data name="TodayExpensesDescr" xml:space="preserve">
    <value>Сегодняшние расходы:</value>
  </data>
  <data name="TodayBalance" xml:space="preserve">
    <value>Сегодняшний баланс:</value>
  </data>
  <data name="TodayBalanceDescr" xml:space="preserve">
    <value>Разница между доходом и расходом</value>
  </data>
  <data name="LandLimit" xml:space="preserve">
    <value>Оставшийся лимит земли:</value>
  </data>
  <data name="LandLimitDescr" xml:space="preserve">
    <value>Золотой запас, оставшийся в данной земле</value>
  </data>
  <data name="ResidenceProdLand" xml:space="preserve">
    <value>Место добычи:</value>
  </data>
  <data name="ResidenceProdLandDescr" xml:space="preserve">
    <value>Земля, на которой производится добыча ресурсов</value>
  </data>
  <data name="WorkingPeasants" xml:space="preserve">
    <value>Работающие крестьяне:</value>
  </data>
  <data name="WorkingPeasantsDescr" xml:space="preserve">
    <value>Количество нанятых крестьян</value>
  </data>
  <data name="ProjectedDailyEarnings" xml:space="preserve">
    <value>Прогнозируемый дневной доход:</value>
  </data>
  <data name="ProjectedDailyEarningsDescr" xml:space="preserve">
    <value>Прогнозируемый дневной доход</value>
  </data>
  <data name="ArmyMaintenance" xml:space="preserve">
    <value>Затраты на армию</value>
  </data>
  <data name="ArmyMaintenanceDescr" xml:space="preserve">
    <value>Дневные затраты на содержание солдат</value>
  </data>
  <data name="ProjectedDailyBalance" xml:space="preserve">
    <value>Дневной баланс</value>
  </data>
  <data name="ProjectedDailyBalanceDescr" xml:space="preserve">
    <value>Разница между доходами и расходами</value>
  </data>
  <data name="Taxes" xml:space="preserve">
    <value>Налоги:</value>
  </data>
  <data name="TaxesDescr" xml:space="preserve">
    <value>Земельный налог</value>
  </data>
  <data name="Attributes" xml:space="preserve">
    <value>Атрибуты</value>
  </data>
  <data name="Management" xml:space="preserve">
    <value>Управление</value>
  </data>
  <data name="ManagementDescr" xml:space="preserve">
    <value>повышает базовый доход от крестьян на 2% за каждый уровень</value>
  </data>
  <data name="Warfare" xml:space="preserve">
    <value>Военное дело</value>
  </data>
  <data name="WarfareDescr" xml:space="preserve">
    <value>повышает силу армии на 2% за каждый уровень</value>
  </data>
  <data name="Leadership" xml:space="preserve">
    <value>Лидерство</value>
  </data>
  <data name="LeadershipDescr" xml:space="preserve">
    <value>Повышает шанс получения дополнительного рекрута на 2%</value>
  </data>
  <data name="ResetCost" xml:space="preserve">
    <value>Сумма сброса одного атрибута:</value>
  </data>
  <data name="LocalEvents" xml:space="preserve">
    <value>Локальные события</value>
  </data>
  <data name="EventAssigned" xml:space="preserve">
    <value>Событие началось</value>
  </data>
  <data name="EventDuration" xml:space="preserve">
    <value>Если вы не выберете ни один из вариантов, событие изменится через 6 часов</value>
  </data>
</root>